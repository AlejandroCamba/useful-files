{
  "extends": [
    "tslint:all",
    "./rxjs-tslint-rules/index.json",
    "./tslint-eslint-rules/index.json",
    "./tslint-react-rules/index.json",
    "tslint-config-prettier"
  ],
  "rules": {
    // TypeScript Specific
    // These rules find errors related to TypeScript features
    "adjacent-overload-signatures": true,
    "ban-ts-ignore": true,
    "ban-types": [
      true,
      ["Object", "Avoid using the 'Object' type. Did you mean 'object'?"],
      [
        "Function",
        "Avoid using the 'Function' type. Prefer a specific function type, like '() => void'."
      ],
      ["Boolean", "Avoid using the 'Boolean' type. Did you mean 'boolean'?"],
      ["Number", "Avoid using the 'Number' type. Did you mean 'number'?"],
      ["String", "Avoid using the 'String' type. Did you mean 'string'?"],
      ["Symbol", "Avoid using the 'Symbol' type. Did you mean 'symbol'?"]
    ],
    "member-access": [true, "no-public"],
    "member-ordering": [
      true,
      {
        "order": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "public-constructor",
          "protected-constructor",
          "private-constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    ],
    "no-any": [
      true,
      {
        "ignore-rest-args": true
      }
    ],
    "no-empty-interface": true,
    "no-import-side-effect": false,
    "no-inferrable-types": true,
    "no-internal-module": true,
    "no-magic-numbers": [
      true,
      {
        "allowed-numbers": [-1, 0, 1],
        "ignore-jsx": true
      }
    ],
    "no-namespace": false,
    "no-non-null-assertion": true,
    "no-parameter-reassignment": true,
    "no-reference": true,
    "no-unnecessary-type-assertion": true,
    "no-var-requires": true,
    "only-arrow-functions": [true, "allow-declarations", "allow-named-functions"],
    "prefer-for-of": true,
    "promise-function-async": false,
    "typedef": [
      true,
      "call-signature",
      "arrow-call-signature",
      "parameter",
      "arrow-parameter",
      "property-declaration",
      "member-variable-declaration",
      "object-destructuring",
      "array-destructuring"
    ],
    "typedef-whitespace": [
      false,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      },
      {
        "call-signature": "onespace",
        "index-signature": "onespace",
        "parameter": "onespace",
        "property-declaration": "onespace",
        "variable-declaration": "onespace"
      }
    ],
    "unified-signatures": true,

    // Functionality
    // These rules catch common errors in TS programming or otherwise confusing constructs that are prone to producing bugs
    "await-promise": [true, "Thenable"],
    "ban-comma-operator": true,
    "ban": false,
    "curly": true,
    "forin": true,
    "function-constructor": true,
    "import-blacklist": false,
    "label-position": true,
    "no-arg": true,
    "no-bitwise": true,
    "no-conditional-assignment": true,
    "no-console": [true, "debug", "info", "time", "timeEnd", "trace"],
    "no-construct": true,
    "no-debugger": true,
    "no-duplicate-super": true,
    "no-duplicate-switch-case": true,
    "no-duplicate-variable": [true, "check-parameters"],
    "no-dynamic-delete": true,
    "no-empty": [true, "allow-empty-functions"],
    "no-eval": true,
    "no-floating-promises": true,
    "no-for-in-array": true,
    "no-implicit-dependencies": [true, "dev", ["@root", "@app", "@my-storybook", "@tests"]],
    "no-inferred-empty-object-type": true,
    "no-invalid-template-strings": true,
    "no-invalid-this": [true, "check-function-in-method"],
    "no-misused-new": true,
    "no-null-keyword": false,
    "no-null-undefined-union": true,
    "no-object-literal-type-assertion": [
      true,
      {
        "allow-arguments": true
      }
    ],
    "no-restricted-globals": [true, "name", "length", "event"],
    "no-return-await": true,
    "no-shadowed-variable": [
      true,
      {
        "class": true,
        "enum": true,
        "function": true,
        "import": true,
        "interface": true,
        "namespace": true,
        "typeAlias": true,
        "typeParameter": true,
        "temporalDeadZone": true,
        "underscore": true
      }
    ],
    "no-sparse-arrays": true,
    "no-string-literal": false,
    "no-string-throw": true,
    "no-submodule-imports": false,
    "no-switch-case-fall-through": true,
    "no-tautology-expression": true,
    "no-this-assignment": [
      true,
      {
        "allow-destructuring": true
      }
    ],
    "no-unbound-method": [
      true,
      {
        "ignore-static": true,
        "allow-delete": true,
        "allow-typeof": true,
        "whitelist": ["expect"]
      }
    ],
    "no-unnecessary-class": true,
    "no-unsafe-any": false,
    "no-unsafe-finally": true,
    "no-unused-expression": true,
    "no-use-before-declare": false,
    "no-var-keyword": true,
    "no-void-expression": true,
    "prefer-conditional-expression": true,
    "prefer-object-spread": true,
    "radix": true,
    "restrict-plus-operands": true,
    "static-this": true,
    "strict-boolean-expressions": false,
    "strict-type-predicates": true,
    "switch-default": true,
    "triple-equals": [true, "allow-null-check"],
    "unnecessary-constructor": true,
    "use-default-type-parameter": true,
    "use-isnan": true,

    // Maintainability
    // These rules make code maintenance easier
    "cyclomatic-complexity": [true, 20],
    "deprecation": true,
    "eofline": false,
    "indent": [false, "spaces", 2],
    "linebreak-style": [false, "LF"],
    "max-classes-per-file": [true, 1, "exclude-class-expressions"],
    "max-file-line-count": [true, 2000],
    "max-line-length": false,
    "no-default-export": false,
    "no-default-import": false,
    "no-duplicate-imports": true,
    "no-mergeable-namespace": true,
    "no-require-imports": true,
    "object-literal-sort-keys": false,
    "prefer-const": true,
    "prefer-readonly": true,
    "trailing-comma": [
      false,
      {
        "multiline": "never",
        "singleline": "never",
        "esSpecCompliant": true
      }
    ],

    // Style
    // These rules enforce consistent style across your codebase
    "align": [false, "parameters", "arguments", "statements", "members", "elements"],
    "array-type": [true, "array"],
    "arrow-parens": false,
    "arrow-return-shorthand": [true, "multiline"],
    "binary-expression-operand-order": true,
    "callable-types": true,
    "class-name": true,
    "comment-format": [true, "check-space", "check-uppercase"],
    "comment-type": false,
    "completed-docs": false,
    "encoding": true,
    "file-header": false,
    "file-name-casing": [true, "kebab-case"],
    "increment-decrement": false,
    "import-spacing": false,
    "interface-name": [true, "never-prefix"],
    "interface-over-type-literal": true,
    "match-default-export-name": false,
    "newline-before-return": true,
    "newline-per-chained-call": false,
    "new-parens": false,
    "no-angle-bracket-type-assertion": false,
    "no-boolean-literal-compare": true,
    "no-consecutive-blank-lines": false,
    "no-irregular-whitespace": false,
    "no-parameter-properties": false,
    "no-redundant-jsdoc": true,
    "no-reference-import": true,
    "no-trailing-whitespace": false,
    "no-unnecessary-callback-wrapper": true,
    "no-unnecessary-initializer": true,
    "no-unnecessary-qualifier": true,
    "number-literal-format": false,
    "object-literal-key-quotes": [false, "as-needed"],
    "object-literal-shorthand": true,
    "one-line": [
      false,
      "check-open-brace",
      "check-catch",
      "check-else",
      "check-finally",
      "check-whitespace"
    ],
    "one-variable-per-declaration": [true, "ignore-for-loop"],
    "ordered-imports": [
      true,
      {
        "import-sources-order": "case-insensitive",
        "named-imports-order": "case-insensitive",
        "module-source-path": "full",
        "grouped-imports": true,
        "groups": [
          {
            "name": "libraries",
            "match": "^(?!([.]|@(root|app|my-storybook|tests))).*",
            "order": 10
          },
          {
            "name": "path aliases",
            "match": "^@(root|app|my-storybook|tests)",
            "order": 20
          },
          {
            "name": "parent directories",
            "match": "^[.][.]",
            "order": 30
          },
          {
            "name": "current directory",
            "match": "^[.]",
            "order": 40
          }
        ]
      }
    ],
    "prefer-function-over-method": true,
    "prefer-method-signature": false,
    "prefer-switch": true,
    "prefer-template": true,
    "prefer-while": true,
    "quotemark": [false, "double", "avoid-template"],
    "return-undefined": true,
    "semicolon": [false, "always", "strict-bound-class-methods"],
    "space-before-function-paren": [
      false,
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "constructor": "never",
        "method": "never",
        "named": "never"
      }
    ],
    "space-within-parens": [false, 0],
    "switch-final-break": [true, "always"],
    "type-literal-delimiter": [
      false,
      {
        "singleLine": "always"
      }
    ],
    "unnecessary-bind": true,
    "unnecessary-else": [
      true,
      {
        "allow-else-if": true
      }
    ],
    "variable-name": [
      true,
      "ban-keywords",
      "check-format",
      "allow-leading-underscore",
      "allow-pascal-case",
      "require-const-for-all-caps"
    ],
    "whitespace": [
      false,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-module",
      "check-separator",
      "check-rest-spread",
      "check-type",
      "check-typecast",
      "check-type-operator",
      "check-preblock"
    ]
  }
}
