{
  "extends": ["tslint-eslint-rules"],
  "rules": {
    // Possible Errors
    // The following rules point out areas where you might have made mistakes
    "no-constant-condition": true,
    "no-control-regex": true,
    "no-duplicate-case": true,
    "no-empty-character-class": true,
    "no-ex-assign": true,
    "no-extra-boolean-cast": true,
    "no-extra-semi": true,
    "no-inner-declarations": [true, "both"],
    "no-invalid-regexp": true,
    "no-regex-spaces": true,
    "no-unexpected-multiline": true,

    // Best Practices
    // These are rules designed to prevent you from making mistakes. They either prescribe a better way of doing something or help you avoid footguns
    "no-multi-spaces": [
      true,
      {
        "exceptions": {
          "PropertyAssignment": true,
          "VariableDeclarator": true,
          "ImportDeclaration": true
        }
      }
    ],

    // Node.js and CommonJS
    // These rules are specific to JavaScript running on Node.js or using CommonJS in the browser
    "handle-callback-err": [true, "^(err|error)$"],

    // Stylistic Issues
    // These rules are purely matters of style and are quite subjective
    "array-bracket-spacing": [true, "always"],
    "block-spacing": [true, "always"],
    "brace-style": [
      true,
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "ter-indent": [
      true,
      2,
      {
        "SwitchCase": true
      }
    ],
    "ter-no-tabs": true,
    "ter-padded-blocks": false,
    "object-curly-spacing": [true, "always"],
    "space-in-parens": [true, "never"],

    // ECMAScript 6
    // These rules are only relevant to ES6 environments
    "ter-arrow-spacing": [
      true,
      {
        "before": true,
        "after": true
      }
    ]
  }
}
