{
  "plugins": ["react"],
  "rules": {
    // Possible Errors
    // These rules relate to possible syntax or logic errors in React code
    "react/button-has-type": [
      "error",
      {
        "button": true,
        "submit": true,
        "reset": true
      }
    ],
    "react/jsx-key": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": [
      "error",
      {
        "ignoreCase": false
      }
    ],
    "react/jsx-no-undef": [
      "error",
      {
        "allowGlobals": true
      }
    ],
    "react/no-access-state-in-setstate": "error",
    "react/no-danger-with-children": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-this-in-sfc": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/react-in-jsx-scope": "error",
    "react/require-render-return": "error",

    // Best Practices
    // These rules relate to better ways of doing things to help you avoid problems
    "react/default-props-match-prop-types": [
      "error",
      {
        "allowRequiredDefaults": false
      }
    ],
    "react/display-name": [
      "warn",
      {
        "ignoreTranspilerName": true
      }
    ],
    "react/forbid-component-props": [
      "warn",
      {
        "forbid": ["className", "style"]
      }
    ],
    "react/forbid-dom-props": "off",
    "react/forbid-elements": "off",
    "react/forbid-foreign-prop-types": "error",
    "react/forbid-prop-types": [
      "warn",
      {
        "forbid": ["any", "array", "object"],
        "checkContextTypes": true,
        "checkChildContextTypes": true
      }
    ],
    "react/jsx-no-bind": "error",
    "react/jsx-no-target-blank": [
      "error",
      {
        "enforceDynamicLinks": "always"
      }
    ],
    "react/jsx-uses-react": "warn",
    "react/jsx-uses-vars": "warn",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-unsafe": [
      "error",
      {
        "checkAliases": false
      }
    ],
    "react/no-unused-prop-types": "off",
    "react/no-unused-state": "error",
    "react/no-will-update-set-state": ["error", "disallow-in-func"],
    "react/prop-types": "error",
    "react/require-default-props": [
      "error",
      {
        "forbidDefaultForRequired": true
      }
    ],
    "react/require-optimization": "warn",
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error",

    // Stylistic Issues
    // These rules relate to style guidelines, and are therefore quite subjective
    "react/boolean-prop-naming": [
      "error",
      {
        "propTypeNames": ["bool", "mutuallyExclusiveTrueProps"]
      }
    ],
    "react/destructuring-assignment": ["warn", "always"],
    "react/jsx-boolean-value": "off",
    "react/jsx-child-element-spacing": "warn",
    "react/jsx-closing-bracket-location": ["warn", "line-aligned"],
    "react/jsx-closing-tag-location": "warn",
    "react/jsx-curly-brace-presence": [
      "warn",
      {
        "props": "always",
        "children": "ignore"
      }
    ],
    "react/jsx-curly-spacing": [
      "warn",
      {
        "when": "never",
        "attributes": {
          "allowMultiline": true
        },
        "children": {
          "allowMultiline": true
        },
        "spacing": {
          "objectLiterals": "never"
        }
      }
    ],
    "react/jsx-equals-spacing": ["warn", "never"],
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".jsx"]
      }
    ],
    "react/jsx-first-prop-new-line": ["warn", "multiline-multiprop"],
    "react/jsx-fragments": ["warn", "syntax"],
    "react/jsx-handler-names": [
      "error",
      {
        "eventHandlerPrefix": "handle",
        "eventHandlerPropPrefix": "on"
      }
    ],
    "react/jsx-indent-props": ["warn", 2],
    "react/jsx-indent": ["error", 2],
    "react/jsx-max-depth": [
      "warn",
      {
        "max": 4
      }
    ],
    "react/jsx-max-props-per-line": [
      "warn",
      {
        "maximum": 1,
        "when": "always"
      }
    ],
    "react/jsx-no-literals": [
      "warn",
      {
        "noStrings": true
      }
    ],
    "react/jsx-one-expression-per-line": [
      "warn",
      {
        "allow": "single-child"
      }
    ],
    "react/jsx-pascal-case": [
      "error",
      {
        "allowAllCaps": false
      }
    ],
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-sort-default-props": "warn",
    "react/jsx-sort-props": [
      "warn",
      {
        "callbacksLast": true,
        "shorthandFirst": false,
        "shorthandLast": false,
        "ignoreCase": false,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "allow"
      }
    ],
    "react/jsx-wrap-multilines": [
      "warn",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "ignore",
        "logical": "ignore",
        "prop": "ignore"
      }
    ],
    "react/no-multi-comp": "error",
    "react/no-set-state": "warn",
    "react/no-typos": "error",
    "react/prefer-es6-class": ["error", "always"],
    "react/prefer-read-only-props": "off",
    "react/prefer-stateless-function": [
      "error",
      {
        "ignorePureComponents": true
      }
    ],
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": true
      }
    ],
    "react/sort-comp": [
      "warn",
      {
        "order": ["static-methods", "lifecycle", "everything-else", "render"],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "getDefaultProps",
            "state",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
        }
      }
    ],
    "react/sort-prop-types": [
      "warn",
      {
        "callbacksLast": true,
        "ignoreCase": false,
        "requiredFirst": true,
        "sortShapeProp": true,
        "noSortAlphabetically": false
      }
    ]
  }
}
